// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Accredited Installer', function() {
  this.timeout(50000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Accredited Installer', async function() {
    await driver.get("https://verticdev-cleanenergycouncil.cs58.force.com/ComplaintForm")
    {
      const dropdown = await driver.findElement(By.id("natureComplaint"))
      await dropdown.findElement(By.css("*[value='Make a complaint against an accredited installer']")).click()
    }
    await driver.findElement(By.id("firstName")).click()
    await driver.findElement(By.id("firstName")).sendKeys("Selenium")
    await driver.findElement(By.id("lastName")).sendKeys("Test")
    await driver.findElement(By.id("email")).sendKeys("ddd@gmail.com")
    await driver.findElement(By.css(".ng-scope > .ng-invalid")).sendKeys("3778 893 737")
    await driver.findElement(By.id("streetAddress")).sendKeys("ggd")
    await driver.findElement(By.id("mailingCity")).sendKeys("mel")
    await driver.findElement(By.id("postCode")).sendKeys("123355677899")
    await driver.findElement(By.id("mailingState")).click()
    {
      const dropdown = await driver.findElement(By.id("mailingState"))
      await dropdown.findElement(By.css("*[value='NT']")).click()
    }
    await driver.findElement(By.id("installerName")).sendKeys("Selenium1")
    await driver.findElement(By.css(".col-sm-6:nth-child(2) #installerName")).sendKeys("Test1")
    await driver.findElement(By.id("city")).sendKeys("sdf")
    await driver.findElement(By.id("state")).click()
    {
      const dropdown = await driver.findElement(By.id("state"))
      await dropdown.findElement(By.css("*[value='QLD']")).click()
    }
    await driver.findElement(By.id("systemType")).click()
    {
      const dropdown = await driver.findElement(By.id("systemType"))
      await dropdown.findElement(By.css("*[value='Stand-alone system']")).click()
    }
    await driver.findElement(By.id("withBatteries")).click()
    {
      const dropdown = await driver.findElement(By.id("withBatteries"))
      await dropdown.findElement(By.css("*[value='No']")).click()
    }
    await driver.findElement(By.id("mountingType")).click()
    {
      const dropdown = await driver.findElement(By.id("mountingType"))
      await dropdown.findElement(By.css("*[value='Tilt frame']")).click()
    }
    await driver.findElement(By.css(".input-group > #dateOfInstallation")).click()
    await driver.findElement(By.css("tr:nth-child(1) > .day:nth-child(3)")).click()
    await driver.findElement(By.id("Address where system installed")).sendKeys("www")
    await driver.findElement(By.id("panelBrand")).sendKeys("ddd")
    await driver.findElement(By.css(".row:nth-child(13) #power")).sendKeys("fgf")
    await driver.findElement(By.id("Summary of main points")).sendKeys("jjgdds")
    await driver.findElement(By.css(".btn")).click()
    await driver.wait(until.elementLocated(By.xpath("//h2[contains(.,\'Your dispute has been submitted successfully\')]")), 20000)
  })
})
